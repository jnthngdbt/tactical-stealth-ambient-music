var z=Object.defineProperty;var E=(n,e,t)=>e in n?z(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var r=(n,e,t)=>E(n,typeof e!="symbol"?e+"":e,t);import{O as R,B as T,F as x,h as C,g as w,U as L,a as c,n as A,H as F,N as k,o as P,e as B,V as W,b as g,c as D,d as U,W as H,p as Y,i as Q}from"./three.module-B6jDhfqD.js";const O={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class u{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const V=new R(-1,1,1,-1,0,1);class X extends T{constructor(){super(),this.setAttribute("position",new x([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new x([0,2,0,0,2,0],2))}}const j=new X;class G{constructor(e){this._mesh=new C(j,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,V)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class I extends u{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof w?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=L.clone(e.uniforms),this.material=new w({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new G(this.material)}render(e,t,a){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=a.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class v extends u{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,a){const o=e.getContext(),i=e.state;i.buffers.color.setMask(!1),i.buffers.depth.setMask(!1),i.buffers.color.setLocked(!0),i.buffers.depth.setLocked(!0);let s,h;this.inverse?(s=0,h=1):(s=1,h=0),i.buffers.stencil.setTest(!0),i.buffers.stencil.setOp(o.REPLACE,o.REPLACE,o.REPLACE),i.buffers.stencil.setFunc(o.ALWAYS,s,4294967295),i.buffers.stencil.setClear(h),i.buffers.stencil.setLocked(!0),e.setRenderTarget(a),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),i.buffers.color.setLocked(!1),i.buffers.depth.setLocked(!1),i.buffers.color.setMask(!0),i.buffers.depth.setMask(!0),i.buffers.stencil.setLocked(!1),i.buffers.stencil.setFunc(o.EQUAL,1,4294967295),i.buffers.stencil.setOp(o.KEEP,o.KEEP,o.KEEP),i.buffers.stencil.setLocked(!0)}}class N extends u{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class K{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const a=e.getSize(new c);this._width=a.width,this._height=a.height,t=new A(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:F}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new I(O),this.copyPass.material.blending=k,this.clock=new P}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let a=!1;for(let o=0,i=this.passes.length;o<i;o++){const s=this.passes[o];if(s.enabled!==!1){if(s.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(o),s.render(this.renderer,this.writeBuffer,this.readBuffer,e,a),s.needsSwap){if(a){const h=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(h.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(h.EQUAL,1,4294967295)}this.swapBuffers()}v!==void 0&&(s instanceof v?a=!0:s instanceof N&&(a=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new c);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const a=this._width*this._pixelRatio,o=this._height*this._pixelRatio;this.renderTarget1.setSize(a,o),this.renderTarget2.setSize(a,o);for(let i=0;i<this.passes.length;i++)this.passes[i].setSize(a,o)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class J extends u{constructor(e,t,a=null,o=null,i=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=a,this.clearColor=o,this.clearAlpha=i,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new B}render(e,t,a){const o=e.autoClear;e.autoClear=!1;let i,s;this.overrideMaterial!==null&&(s=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(i=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:a),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(i),this.overrideMaterial!==null&&(this.scene.overrideMaterial=s),e.autoClear=o}}const d=new w({uniforms:{resolution:{value:new c(window.innerWidth,window.innerHeight)},pixelSize:{value:3},time:{value:0},noiseIntensity:{value:.1},diffuseTexture:{value:null}},vertexShader:`
    varying vec2 vUv;
    void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,fragmentShader:`
    uniform vec2 resolution;
    uniform float pixelSize;
    uniform float time;
    uniform float noiseIntensity;
    uniform sampler2D diffuseTexture; // Renamed
    varying vec2 vUv;

    // Generate random noise
    float random(vec2 st) {
      return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);
    }

    void main() {
      // Sample the texture normally, without pixelation
      vec4 texColor = texture2D(diffuseTexture, vUv);

      // Calculate pixelation size and coordinates
      vec2 dxy = pixelSize / resolution;
      vec2 coord = dxy * floor(vUv / dxy);

      // Add pixelated noise
      float noise = random(coord * time) * noiseIntensity;
      texColor.rgb += noise;

      gl_FragColor = texColor;
    }
  `});class q{constructor(e,t,a,o,i){r(this,"window");r(this,"camera");r(this,"renderer");r(this,"composer");r(this,"planeSize");r(this,"isPanning",!1);r(this,"panSpeedFactor",10);r(this,"minZoomCameraPosZ",.8);r(this,"isSideZooming",!1);r(this,"sideZoomZoneWidth",.15);r(this,"sideZoomPos",0);r(this,"scrollZoomSpeedFactor",.001);r(this,"sideZoomSpeedFactor",.002);r(this,"startMouse",new c);r(this,"startCameraPosition",new W);this.window=e,this.camera=t,this.renderer=a,this.composer=o,this.planeSize=i,e.addEventListener("mousedown",s=>{this.isSideZoomZone(s.clientX)?this.onSideZoomStart(s.clientY):this.onPanStart(s.clientX,s.clientY)}),e.addEventListener("mousemove",s=>{this.isSideZooming?this.onSideZoom(s.clientY):this.onPan(s.clientX,s.clientY)}),e.addEventListener("mouseup",()=>{this.isSideZooming?this.onSideZoomEnd():this.onPanEnd()}),e.addEventListener("touchstart",s=>{this.isSideZoomZone(s.touches[0].clientX)?this.onSideZoomStart(s.touches[0].clientY):this.onPanStart(s.touches[0].clientX,s.touches[0].clientY)}),e.addEventListener("touchmove",s=>{this.isSideZooming?this.onSideZoom(s.touches[0].clientY):this.onPan(s.touches[0].clientX,s.touches[0].clientY)}),e.addEventListener("touchend",()=>{this.isSideZooming?this.onSideZoomEnd():this.onPanEnd()}),e.addEventListener("wheel",s=>{this.onZoom(s.deltaY*this.scrollZoomSpeedFactor)}),e.addEventListener("resize",()=>{this.onResize()})}update(e){}isSideZoomZone(e){return e/this.window.innerWidth>1-this.sideZoomZoneWidth}onSideZoomStart(e){this.isSideZooming=!0,this.sideZoomPos=e}onSideZoom(e){const t=e-this.sideZoomPos;this.sideZoomPos=e,this.onZoom(t*this.sideZoomSpeedFactor)}onSideZoomEnd(){this.isSideZooming=!1}onZoom(e){this.camera.position.z+=e*this.camera.position.z,this.restrictCameraPosition()}onPanStart(e,t){this.isPanning=!0,this.startMouse.set(e,t),this.startCameraPosition.copy(this.camera.position)}onPanEnd(){this.isPanning=!1}onPan(e,t){if(!this.isPanning)return;const a=(e-this.startMouse.x)/this.window.innerWidth,o=(t-this.startMouse.y)/this.window.innerHeight;this.camera.position.x=this.startCameraPosition.x+a*this.panSpeedFactor,this.camera.position.y=this.startCameraPosition.y-o*this.panSpeedFactor,this.restrictCameraPosition()}onResize(){this.camera.aspect=this.window.innerWidth/this.window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.window.innerWidth,this.window.innerHeight),this.composer.setSize(this.window.innerWidth,this.window.innerHeight)}restrictCameraPosition(){const t=this.camera.position.z,a=.85*this.camera.fov/2*(Math.PI/180),o=this.camera.aspect,i=2*t*Math.tan(a),s=i*o,h=(this.planeSize.x-s)/2,l=(this.planeSize.y-i)/2,M=this.planeSize.y/(2*Math.tan(a)),y=this.planeSize.x/(2*Math.tan(a)*o),Z=Math.min(M,y);this.camera.position.x=g.clamp(this.camera.position.x,-h,h),this.camera.position.y=g.clamp(this.camera.position.y,-l,l),this.camera.position.z=g.clamp(this.camera.position.z,this.minZoomCameraPosZ,Z)}}class ${constructor(e,t=.0015,a=2){r(this,"camera");r(this,"amplitude",.0015);r(this,"speed",2);this.camera=e,this.amplitude=t,this.speed=a}update(e){const t=e/this.speed;this.camera.position.x+=Math.sin(t)*this.amplitude*(Math.random()-.5),this.camera.position.y+=Math.cos(t)*this.amplitude*(Math.random()-.5)}}const _=new D,m=new U(75,window.innerWidth/window.innerHeight,.1,1e3);m.position.z=2;const p=new H({antialias:!0});p.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(p.domElement);const ee="jnthngdbt_Midnight_cyberpunk_concrete_multi-building_bunker_com_ce184244-4427-4403-9573-914a55257101.png",te="https://raw.githubusercontent.com/jnthngdbt/tactical-steath-ambient-music-assets/refs/heads/main/binoculars/high-res/";var f=new c(0,0);const se=new Y;se.load(te+ee,n=>{d.uniforms.diffuseTexture.value=n,d.uniforms.resolution.value.set(n.image.width,n.image.height);const e=n.image.width/n.image.height;f.set(10,10/e);const t=new Q(f.x,f.y),a=new C(t,d);_.add(a)});const S=new K(p);S.addPass(new J(_,m));var ie=new q(window,m,p,S,f),ae=new $(m,.0015,2);const oe=new P;function b(){const n=oe.getElapsedTime();d.uniforms.time.value=n,ie.update(n),ae.update(n),requestAnimationFrame(b),S.render()}b();
