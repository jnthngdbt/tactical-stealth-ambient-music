var lt=Object.defineProperty;var ct=(o,t,e)=>t in o?lt(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var S=(o,t,e)=>ct(o,typeof t!="symbol"?t+"":t,e);import{R as pt,P as dt,V as T,C as ut,M as O,T as A,Q as X,S as V,a as M,b as mt,c as ft,W as _t,d as yt,e as gt,f as $,D as U,g as F,h as k,i as bt,B as wt,j as C,k as Pt,l as Et,m as q}from"./three.module-C0wgaaDp.js";const G={type:"change"},B={type:"start"},J={type:"end"},I=new pt,Q=new dt,Tt=Math.cos(70*mt.DEG2RAD),y=new T,w=2*Math.PI,c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},H=1e-6;class Mt extends ut{constructor(t,e=null){super(t,e),this.state=c.NONE,this.enabled=!0,this.target=new T,this.cursor=new T,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:O.ROTATE,MIDDLE:O.DOLLY,RIGHT:O.PAN},this.touches={ONE:A.ROTATE,TWO:A.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new T,this._lastQuaternion=new X,this._lastTargetPosition=new T,this._quat=new X().setFromUnitVectors(t.up,new T(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new V,this._sphericalDelta=new V,this._scale=1,this._panOffset=new T,this._rotateStart=new M,this._rotateEnd=new M,this._rotateDelta=new M,this._panStart=new M,this._panEnd=new M,this._panDelta=new M,this._dollyStart=new M,this._dollyEnd=new M,this._dollyDelta=new M,this._dollyDirection=new T,this._mouse=new M,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Dt.bind(this),this._onPointerDown=xt.bind(this),this._onPointerUp=vt.bind(this),this._onContextMenu=Lt.bind(this),this._onMouseWheel=Ot.bind(this),this._onKeyDown=Rt.bind(this),this._onTouchStart=Nt.bind(this),this._onTouchMove=kt.bind(this),this._onMouseDown=St.bind(this),this._onMouseMove=At.bind(this),this._interceptControlDown=jt.bind(this),this._interceptControlUp=zt.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(G),this.update(),this.state=c.NONE}update(t=null){const e=this.object.position;y.copy(e).sub(this.target),y.applyQuaternion(this._quat),this._spherical.setFromVector3(y),this.autoRotate&&this.state===c.NONE&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let s=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(s)&&isFinite(i)&&(s<-Math.PI?s+=w:s>Math.PI&&(s-=w),i<-Math.PI?i+=w:i>Math.PI&&(i-=w),s<=i?this._spherical.theta=Math.max(s,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(s+i)/2?Math.max(s,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let n=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const a=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),n=a!=this._spherical.radius}if(y.setFromSpherical(this._spherical),y.applyQuaternion(this._quatInverse),e.copy(this.target).add(y),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let a=null;if(this.object.isPerspectiveCamera){const l=y.length();a=this._clampDistance(l*this._scale);const d=l-a;this.object.position.addScaledVector(this._dollyDirection,d),this.object.updateMatrixWorld(),n=!!d}else if(this.object.isOrthographicCamera){const l=new T(this._mouse.x,this._mouse.y,0);l.unproject(this.object);const d=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),n=d!==this.object.zoom;const p=new T(this._mouse.x,this._mouse.y,0);p.unproject(this.object),this.object.position.sub(p).add(l),this.object.updateMatrixWorld(),a=y.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;a!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(a).add(this.object.position):(I.origin.copy(this.object.position),I.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(I.direction))<Tt?this.object.lookAt(this.target):(Q.setFromNormalAndCoplanarPoint(this.object.up,this.target),I.intersectPlane(Q,this.target))))}else if(this.object.isOrthographicCamera){const a=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),a!==this.object.zoom&&(this.object.updateProjectionMatrix(),n=!0)}return this._scale=1,this._performCursorZoom=!1,n||this._lastPosition.distanceToSquared(this.object.position)>H||8*(1-this._lastQuaternion.dot(this.object.quaternion))>H||this._lastTargetPosition.distanceToSquared(this.target)>H?(this.dispatchEvent(G),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(t){return t!==null?w/60*this.autoRotateSpeed*t:w/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(t*.01);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){y.setFromMatrixColumn(e,0),y.multiplyScalar(-t),this._panOffset.add(y)}_panUp(t,e){this.screenSpacePanning===!0?y.setFromMatrixColumn(e,1):(y.setFromMatrixColumn(e,0),y.crossVectors(this.object.up,y)),y.multiplyScalar(t),this._panOffset.add(y)}_pan(t,e){const s=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;y.copy(i).sub(this.target);let n=y.length();n*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*n/s.clientHeight,this.object.matrix),this._panUp(2*e*n/s.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/s.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/s.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const s=this.domElement.getBoundingClientRect(),i=t-s.left,n=e-s.top,a=s.width,l=s.height;this._mouse.x=i/a*2-1,this._mouse.y=-(n/l)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(w*this._rotateDelta.x/e.clientHeight),this._rotateUp(w*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(w*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(-w*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(w*this.rotateSpeed/this.domElement.clientHeight):this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(-w*this.rotateSpeed/this.domElement.clientHeight):this._pan(-this.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(this._pointers.length===1)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(s,i)}}_handleTouchStartPan(t){if(this._pointers.length===1)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(s,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,n=Math.sqrt(s*s+i*i);this._dollyStart.set(0,n)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(this._pointers.length==1)this._rotateEnd.set(t.pageX,t.pageY);else{const s=this._getSecondPointerPosition(t),i=.5*(t.pageX+s.x),n=.5*(t.pageY+s.y);this._rotateEnd.set(i,n)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(w*this._rotateDelta.x/e.clientHeight),this._rotateUp(w*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(this._pointers.length===1)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(s,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,n=Math.sqrt(s*s+i*i);this._dollyEnd.set(0,n),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=(t.pageX+e.x)*.5,l=(t.pageY+e.y)*.5;this._updateZoomParameters(a,l)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId){this._pointers.splice(e,1);return}}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];e===void 0&&(e=new M,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,s={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:s.deltaY*=16;break;case 2:s.deltaY*=100;break}return t.ctrlKey&&!this._controlActive&&(s.deltaY*=10),s}}function xt(o){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(o.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(o)&&(this._addPointer(o),o.pointerType==="touch"?this._onTouchStart(o):this._onMouseDown(o)))}function Dt(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchMove(o):this._onMouseMove(o))}function vt(o){switch(this._removePointer(o),this._pointers.length){case 0:this.domElement.releasePointerCapture(o.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(J),this.state=c.NONE;break;case 1:const t=this._pointers[0],e=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:e.x,pageY:e.y});break}}function St(o){let t;switch(o.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case O.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(o),this.state=c.DOLLY;break;case O.ROTATE:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=c.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=c.ROTATE}break;case O.PAN:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=c.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=c.PAN}break;default:this.state=c.NONE}this.state!==c.NONE&&this.dispatchEvent(B)}function At(o){switch(this.state){case c.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(o);break;case c.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(o);break;case c.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(o);break}}function Ot(o){this.enabled===!1||this.enableZoom===!1||this.state!==c.NONE||(o.preventDefault(),this.dispatchEvent(B),this._handleMouseWheel(this._customWheelEvent(o)),this.dispatchEvent(J))}function Rt(o){this.enabled===!1||this.enablePan===!1||this._handleKeyDown(o)}function Nt(o){switch(this._trackPointer(o),this._pointers.length){case 1:switch(this.touches.ONE){case A.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(o),this.state=c.TOUCH_ROTATE;break;case A.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(o),this.state=c.TOUCH_PAN;break;default:this.state=c.NONE}break;case 2:switch(this.touches.TWO){case A.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(o),this.state=c.TOUCH_DOLLY_PAN;break;case A.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(o),this.state=c.TOUCH_DOLLY_ROTATE;break;default:this.state=c.NONE}break;default:this.state=c.NONE}this.state!==c.NONE&&this.dispatchEvent(B)}function kt(o){switch(this._trackPointer(o),this.state){case c.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(o),this.update();break;case c.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(o),this.update();break;case c.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(o),this.update();break;case c.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(o),this.update();break;default:this.state=c.NONE}}function Lt(o){this.enabled!==!1&&o.preventDefault()}function jt(o){o.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function zt(o){o.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}class Ct{constructor({color:t=1118498,fov:e=50,pov:s=[75,40,80]}){S(this,"scene",new ft);S(this,"renderer",new _t({antialias:!0}));S(this,"camera");S(this,"controls");var i;this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement),this.camera=new yt(e,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(...s),this.scene.background=new gt(t),this.controls=new Mt(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.dampingFactor=.25,this.controls.screenSpacePanning=!1,this.controls.maxPolarAngle=Math.PI,this.controls.update(),window.addEventListener("resize",()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}),this.animate=this.animate.bind(this),this.exportScene=this.exportScene.bind(this),(i=document.getElementById("downloadBtn"))==null||i.addEventListener("click",this.exportScene)}animate(){requestAnimationFrame(this.animate),this.controls.update(),this.renderer.render(this.scene,this.camera)}exportScene(){this.scene.updateMatrixWorld();var t=this.scene.toJSON(),e=JSON.stringify(t);const s=new Blob([e],{type:"application/json"}),i=document.createElement("a");i.href=URL.createObjectURL(s),i.download="tsam.three.js.scene.json",document.body.appendChild(i),i.click(),document.body.removeChild(i)}}const It=.05,Yt=8947848,tt=8,Ut=tt+3,Kt=new $({color:Yt,opacity:It,side:U,transparent:!0,depthWrite:!1}),Ht=new F({transparent:!0,depthWrite:!1,side:U,vertexShader:W(),fragmentShader:st(.5,.1)}),et=new F({transparent:!0,depthWrite:!1,side:U,vertexShader:W(),fragmentShader:st(.5,.35)}),Zt=new F({transparent:!0,depthWrite:!1,side:U,vertexShader:W(),fragmentShader:it(1,.5,1,.25)});function st(o,t){return it(o,o,o,t)}function it(o,t,e,s){return`
        // XRAY
        varying vec3 vNormal;
        varying vec3 vViewPosition;

        void main() {
            // Normalize the normal and view direction
            vec3 normal = normalize(vNormal);
            vec3 viewDir = normalize(-vViewPosition);  // In view space, view position is the inverse of camera direction

            // Calculate the dot product to get the angle between the normal and view direction
            float dotProduct = abs(dot(normal, viewDir));

            // Set the alpha based on how aligned the normal is with the view direction
            float alpha = ${.85*s} * smoothstep(0.0, 1.0, dotProduct); // Adjust the range as needed
            
            // Set the final color, for simplicity we'll use white
            gl_FragColor = vec4(${o}, ${t}, ${e}, ${s} - alpha); // Use alpha for transparency
        }
        `}function W(o=0){return`
        // XRAY
        varying vec3 vNormal;
        varying vec3 vViewPosition;

        void main() {
            // XRAY
            vNormal = normalize(normalMatrix * normal); // Transform normal to view space
            vViewPosition = (modelViewMatrix * vec4(position, 1.0)).xyz;
        
            // SHEAR
            float shear = ${o.toFixed(2)};
            vec4 shearedPosition = vec4(position, 1.0);
            shearedPosition.y += shear * shearedPosition.z;

            // Standard transformation for the vertex
            gl_Position = projectionMatrix * modelViewMatrix * shearedPosition;
        }
        `}class Ft extends k{constructor({size:t,position:e=[0,0]}){const[s,i]=t,n=new bt(s,i);super(n,Kt),this.rotation.x=-Math.PI/2,this.position.y=-.01,[this.position.x,this.position.z]=e}}class Z{constructor(t){this.top=0,this.array=new Float32Array(t)}write(t){this.array[this.top++]=t.x,this.array[this.top++]=t.y,this.array[this.top++]=t.z}}class Bt{constructor(t){this.top=0,this.array=new Float32Array(t)}write(t){this.array[this.top++]=t.x,this.array[this.top++]=t.y}}class x{constructor(t){this.plane=null,this.front=null,this.back=null,this.polygons=[],t&&this.build(t)}clone(){const t=new x;return t.plane=this.plane&&this.plane.clone(),t.front=this.front&&this.front.clone(),t.back=this.back&&this.back.clone(),t.polygons=this.polygons.map(e=>e.clone()),t}invert(){for(let e=0;e<this.polygons.length;e++)this.polygons[e].flip();this.plane&&this.plane.flip(),this.front&&this.front.invert(),this.back&&this.back.invert();const t=this.front;this.front=this.back,this.back=t}clipPolygons(t){if(!this.plane)return t.slice();let e=new Array,s=new Array;for(let i=0;i<t.length;i++)this.plane.splitPolygon(t[i],e,s,e,s);return this.front&&(e=this.front.clipPolygons(e)),this.back?s=this.back.clipPolygons(s):s=[],e.concat(s)}clipTo(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)}allPolygons(){let t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t}build(t){if(!t.length)return;this.plane||(this.plane=t[0].plane.clone());const e=[],s=[];for(let i=0;i<t.length;i++)this.plane.splitPolygon(t[i],this.polygons,this.polygons,e,s);e.length&&(this.front||(this.front=new x),this.front.build(e)),s.length&&(this.back||(this.back=new x),this.back.build(s))}}class P{constructor(t=0,e=0,s=0){this.x=t,this.y=e,this.z=s}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}clone(){return new P(this.x,this.y,this.z)}negate(){return this.x*=-1,this.y*=-1,this.z*=-1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}times(t){return this.x*=t,this.y*=t,this.z*=t,this}dividedBy(t){return this.x/=t,this.y/=t,this.z/=t,this}lerp(t,e){return this.add(new P().copy(t).sub(this).times(e))}unit(){return this.dividedBy(this.length())}length(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2)+Math.pow(this.z,2))}normalize(){return this.unit()}cross(t){const e=this.clone(),s=e.x,i=e.y,n=e.z,a=t.x,l=t.y,d=t.z;return this.x=i*d-n*l,this.y=n*a-s*d,this.z=s*l-i*a,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}toVector3(){return new T(this.x,this.y,this.z)}}class v{constructor(t,e){this.normal=t,this.w=e,this.normal=t,this.w=e}clone(){return new v(this.normal.clone(),this.w)}flip(){this.normal.negate(),this.w=-this.w}splitPolygon(t,e,s,i,n){let f=0;const u=[];for(let b=0;b<t.vertices.length;b++){const r=this.normal.dot(t.vertices[b].pos)-this.w,h=r<-v.EPSILON?2:r>v.EPSILON?1:0;f|=h,u.push(h)}switch(f){case 0:(this.normal.dot(t.plane.normal)>0?e:s).push(t);break;case 1:i.push(t);break;case 2:n.push(t);break;case 3:{const b=[],r=[];for(let h=0;h<t.vertices.length;h++){const m=(h+1)%t.vertices.length,g=u[h],E=u[m],D=t.vertices[h],j=t.vertices[m];if(g!=2&&b.push(D),g!=1&&r.push(g!=2?D.clone():D),(g|E)==3){const K=(this.w-this.normal.dot(D.pos))/this.normal.dot(new P().copy(j.pos).sub(D.pos)),z=D.interpolate(j,K);b.push(z),r.push(z.clone())}}b.length>=3&&i.push(new R(b,t.shared)),r.length>=3&&n.push(new R(r,t.shared));break}}}static fromPoints(t,e,s){const i=new P().copy(e).sub(t).cross(new P().copy(s).sub(t)).normalize();return new v(i.clone(),i.dot(t))}}v.EPSILON=1e-5;class R{constructor(t,e){this.vertices=t,this.shared=e,this.plane=v.fromPoints(t[0].pos,t[1].pos,t[2].pos)}clone(){return new R(this.vertices.map(t=>t.clone()),this.shared)}flip(){this.vertices.reverse().map(t=>t.flip()),this.plane.flip()}}class Y{constructor(t,e,s,i){this.pos=new P().copy(t),this.normal=new P().copy(e),this.uv=new P().copy(s),this.uv.z=0,i&&(this.color=new P().copy(i))}clone(){return new Y(this.pos,this.normal,this.uv,this.color)}flip(){this.normal.negate()}interpolate(t,e){return new Y(this.pos.clone().lerp(t.pos,e),this.normal.clone().lerp(t.normal,e),this.uv.clone().lerp(t.uv,e),this.color&&t.color&&this.color.clone().lerp(t.color,e))}}class _{constructor(){this.polygons=[]}static fromPolygons(t){const e=new _;return e.polygons=t,e}static fromGeometry(t,e){let s=[];const i=t.attributes.position,n=t.attributes.normal,a=t.attributes.uv,l=t.attributes.color,d=t.groups;let p;if(t.index)p=t.index.array;else{p=new Uint16Array(i.array.length/i.itemSize|0);for(let u=0;u<p.length;u++)p[u]=u}const f=p.length/3|0;s=new Array(f);for(let u=0,b=0,r=p.length;u<r;u+=3,b++){const h=new Array(3);for(let m=0;m<3;m++){const g=p[u+m],E=g*3,D=g*2,j=i.array[E],K=i.array[E+1],z=i.array[E+2],ot=n.array[E],nt=n.array[E+1],at=n.array[E+2],rt=a==null?void 0:a.array[D],ht=a==null?void 0:a.array[D+1];h[m]=new Y(new P(j,K,z),new P(ot,nt,at),new P(rt,ht,0),l&&new P(l.array[E],l.array[E+1],l.array[E+2]))}if(e===void 0&&d&&d.length>0)for(const m of d)u>=m.start&&u<m.start+m.count&&(s[b]=new R(h,m.materialIndex));else s[b]=new R(h,e)}return _.fromPolygons(s.filter(u=>!Number.isNaN(u.plane.normal.x)))}static toGeometry(t,e){let s=0;const i=t.polygons;for(const r of i)s+=r.vertices.length-2;const n=new wt,a=new Z(s*3*3),l=new Z(s*3*3),d=new Bt(s*2*3);let p;const f=[],u=[];for(const r of i){const h=r.vertices,m=h.length;r.shared!==void 0&&(f[r.shared]||(f[r.shared]=[])),m&&h[0].color!==void 0&&(p||(p=new Z(s*3*3)));for(let g=3;g<=m;g++)(r.shared===void 0?u:f[r.shared]).push(a.top/3,a.top/3+1,a.top/3+2),a.write(h[0].pos),a.write(h[g-2].pos),a.write(h[g-1].pos),l.write(h[0].normal),l.write(h[g-2].normal),l.write(h[g-1].normal),d&&(d.write(h[0].uv),d.write(h[g-2].uv),d.write(h[g-1].uv)),p&&(p.write(h[0].color),p.write(h[g-2].color),p.write(h[g-1].color))}n.setAttribute("position",new C(a.array,3)),n.setAttribute("normal",new C(l.array,3)),d&&n.setAttribute("uv",new C(d.array,2)),p&&n.setAttribute("color",new C(p.array,3));for(let r=0;r<f.length;r++)f[r]===void 0&&(f[r]=[]);if(f.length){let r=[],h=0;for(let m=0;m<f.length;m++)n.addGroup(h,f[m].length,m),h+=f[m].length,r=r.concat(f[m]);n.addGroup(h,u.length,f.length),r=r.concat(u),n.setIndex(r)}const b=new Pt().copy(e).invert();return n.applyMatrix4(b),n.computeBoundingSphere(),n.computeBoundingBox(),n}static fromMesh(t,e){const s=_.fromGeometry(t.geometry,e),i=new T,n=new Et;n.getNormalMatrix(t.matrix);for(let a=0;a<s.polygons.length;a++){const l=s.polygons[a];for(let d=0;d<l.vertices.length;d++){const p=l.vertices[d];p.pos.copy(i.copy(p.pos.toVector3()).applyMatrix4(t.matrix)),p.normal.copy(i.copy(p.normal.toVector3()).applyMatrix3(n))}}return s}static toMesh(t,e,s){const i=_.toGeometry(t,e),n=new k(i,s);return n.matrix.copy(e),n.matrix.decompose(n.position,n.quaternion,n.scale),n.rotation.setFromQuaternion(n.quaternion),n.updateMatrixWorld(),n.castShadow=n.receiveShadow=!0,n}static union(t,e){const s=_.fromMesh(t),i=_.fromMesh(e);return _.toMesh(s.union(i),t.matrix,t.material)}static subtract(t,e){const s=_.fromMesh(t),i=_.fromMesh(e);return _.toMesh(s.subtract(i),t.matrix,t.material)}static intersect(t,e){const s=_.fromMesh(t),i=_.fromMesh(e);return _.toMesh(s.intersect(i),t.matrix,t.material)}clone(){const t=new _;return t.polygons=this.polygons.map(e=>e.clone()).filter(e=>Number.isFinite(e.plane.w)),t}toPolygons(){return this.polygons}union(t){const e=new x(this.clone().polygons),s=new x(t.clone().polygons);return e.clipTo(s),s.clipTo(e),s.invert(),s.clipTo(e),s.invert(),e.build(s.allPolygons()),_.fromPolygons(e.allPolygons())}subtract(t){const e=new x(this.clone().polygons),s=new x(t.clone().polygons);return e.invert(),e.clipTo(s),s.clipTo(e),s.invert(),s.clipTo(e),s.invert(),e.build(s.allPolygons()),e.invert(),_.fromPolygons(e.allPolygons())}intersect(t){const e=new x(this.clone().polygons),s=new x(t.clone().polygons);return e.invert(),s.clipTo(e),s.invert(),e.clipTo(s),s.clipTo(e),e.build(s.allPolygons()),e.invert(),_.fromPolygons(e.allPolygons())}inverse(){const t=this.clone();for(const e of t.polygons)e.flip();return t}toMesh(t,e){return _.toMesh(this,t,e)}toGeometry(t){return _.toGeometry(this,t)}}class Wt extends k{constructor({size:t,position:e=[0,0],level:s=0,height:i=tt}){const[n,a]=e,[l,d]=t,p=s*Ut+i/2,f=.1,u=new k(new q(l,i,d),Ht),b=new k(new q(l-f,i-f,d-f),new $),r=_.subtract(u,b);super(r.geometry,r.material),this.position.set(n,p,a)}}class Xt{constructor(t){S(this,"scene");this.scene=t}addTerrain({size:t}){const e=new Ft({size:t});this.scene.add(e)}addRoom({size:t,position:e=[0,0],level:s=0}){const i=new Wt({size:t,position:e,level:s});this.scene.add(i)}}const L=new Ct({});L.animate();var N=new Xt(L.scene);N.addTerrain({size:[100,100]});N.addRoom({position:[0,0],size:[16,20]});N.addRoom({position:[16,0],size:[16,20]});N.addRoom({position:[0,20],size:[16,20]});N.addRoom({position:[0,20],size:[16,20],level:1});N.addRoom({position:[16,20],size:[16,20],level:1});L.scene.children[1].material=et;L.scene.children[2].material=et;L.scene.children[3].material=Zt;
